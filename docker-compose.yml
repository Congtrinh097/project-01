version: "3.8"

services:
  postgres:
    image: pgvector/pgvector:pg15
    environment:
      POSTGRES_DB: cv_analyzer
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/cv_analyzer
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_EMBED_API_KEY=${OPENAI_EMBED_API_KEY:-}
      - OPENAI_BASE_URL=${OPENAI_BASE_URL:-https://aiportalapi.stu-platform.live/jpe}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4o-mini}
      - CHATBOT_MAX_TOKENS=${CHATBOT_MAX_TOKENS:-500}
      - CHATBOT_TEMPERATURE=${CHATBOT_TEMPERATURE:-0.7}
      - CHATBOT_MAX_HISTORY=${CHATBOT_MAX_HISTORY:-10}
      - UPLOAD_DIR=/tmp/uploads
      - HF_TOKEN=${HF_TOKEN}
      - HF_MODEL_NAME=${HF_MODEL_NAME:-meta-llama/Llama-3.1-8B}
    volumes:
      - ./backend:/app
      - uploads_data:/tmp/uploads
      - ./models:/app/models
    depends_on:
      postgres:
        condition: service_healthy
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=http://localhost:8000
    depends_on:
      - backend

volumes:
  postgres_data:
  uploads_data:
