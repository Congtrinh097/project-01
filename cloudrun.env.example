# Google Cloud Run Environment Configuration
# Copy this file and update the values for your deployment

# ========================================
# Google Cloud Configuration
# ========================================
GCP_PROJECT_ID=cv-analyzer-tlstudio
GCP_REGION=us-central1

# ========================================
# Cloud SQL Configuration
# ========================================
# Format: PROJECT_ID:REGION:INSTANCE_NAME
CLOUD_SQL_CONNECTION_NAME=cv-analyzer-tlstudio:us-central1:cv-analyzer-db
DB_USER=postgres
DB_NAME=cv_analyzer
# DB_PASSWORD is stored in Secret Manager (db-password)

# ========================================
# API Keys (Store in Secret Manager)
# ========================================
# Create secrets using:
# echo -n "YOUR_KEY" | gcloud secrets create openai-api-key --data-file=-
# echo -n "YOUR_KEY" | gcloud secrets create openai-embed-api-key --data-file=-

# OPENAI_API_KEY - stored in Secret Manager
# OPENAI_EMBED_API_KEY - stored in Secret Manager

# ========================================
# Cloud Storage (for file uploads)
# ========================================
GCS_BUCKET_NAME=cv-analyzer-files

# ========================================
# Docker Registry
# ========================================
ARTIFACT_REGISTRY_LOCATION=us-central1
ARTIFACT_REGISTRY_REPO=cv-analyzer-repo

# ========================================
# Cloud Run Service Names
# ========================================
BACKEND_SERVICE_NAME=cv-analyzer-backend
FRONTEND_SERVICE_NAME=cv-analyzer-frontend

# ========================================
# Resource Limits
# ========================================
BACKEND_MEMORY=1Gi
BACKEND_CPU=1
BACKEND_MAX_INSTANCES=10
BACKEND_MIN_INSTANCES=0
BACKEND_TIMEOUT=300

FRONTEND_MEMORY=512Mi
FRONTEND_CPU=1
FRONTEND_MAX_INSTANCES=10
FRONTEND_MIN_INSTANCES=0

# ========================================
# Notes
# ========================================
# - Never commit real API keys or passwords to Git
# - Always use Secret Manager for sensitive data
# - Set min-instances to 1 in production to avoid cold starts
# - Adjust memory and CPU based on actual usage
# - Monitor costs in Cloud Console regularly

